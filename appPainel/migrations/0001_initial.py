# Generated by Django 4.2.4 on 2023-08-31 12:59

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Acao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(max_length=255, verbose_name='Nome da Ação')),
                ('acao_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código da Ação')),
                ('tipo', models.CharField(choices=[('Atividade', 'Atividade'), ('Operação Especial', 'Operação Especial'), ('Projeto', 'Projeto')], max_length=255, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
            ],
            options={
                'verbose_name_plural': 'Ações',
            },
        ),
        migrations.CreateModel(
            name='Eixo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eixo_estrategico', models.CharField(max_length=255, verbose_name='Nome do Eixo')),
                ('eixo_estrategico_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código do Eixo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
            ],
        ),
        migrations.CreateModel(
            name='Etapa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etapa', models.TextField(default='teste', verbose_name='Nome da Etapa')),
                ('etapa_cd', models.CharField(max_length=4, verbose_name='Código da Etapa')),
                ('tipo', models.CharField(choices=[('AÇÃO', 'AÇÃO'), ('AQUISIÇÃO', 'AQUISIÇÃO'), ('OBRA', 'OBRA'), ('PROGRAMA', 'PROGRAMA'), ('PROJETO DE LEI', 'PROJETO DE LEI'), ('PROJETO TÉCNICO', 'PROJETO TÉCNICO'), ('OUTROS', 'OUTROS')], max_length=255, verbose_name='Tipo')),
                ('tema', models.TextField(verbose_name='Tema')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('populacao', models.IntegerField(verbose_name='População')),
            ],
        ),
        migrations.CreateModel(
            name='Iniciativa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iniciativa', models.TextField(default='teste', verbose_name='Nome da Iniciativa')),
                ('iniciativa_cd', models.CharField(max_length=4, verbose_name='Código da Iniciativa')),
                ('tipo', models.CharField(choices=[('AÇÃO', 'AÇÃO'), ('AQUISIÇÃO', 'AQUISIÇÃO'), ('OBRA', 'OBRA'), ('PROGRAMA', 'PROGRAMA'), ('PROJETO DE LEI', 'PROJETO DE LEI'), ('PROJETO TÉCNICO', 'PROJETO TÉCNICO'), ('OUTROS', 'OUTROS')], max_length=255, verbose_name='Tipo')),
                ('tema', models.TextField(verbose_name='Tema')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('populacao', models.IntegerField(verbose_name='População')),
                ('acao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.acao', verbose_name='Nome da Ação')),
                ('gestor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Nome do(a) Gestor(a)')),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Município')),
                ('codigo', models.CharField(max_length=7, verbose_name='Código do Município')),
            ],
            options={
                'verbose_name_plural': 'Municípios',
            },
        ),
        migrations.CreateModel(
            name='Orgao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgao', models.CharField(max_length=255, verbose_name='Nome do Órgão')),
                ('orgao_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código do Órgão')),
            ],
            options={
                'verbose_name_plural': 'Órgãos',
            },
        ),
        migrations.CreateModel(
            name='Secretaria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('secretaria', models.CharField(max_length=255, verbose_name='Nome da Secretaria')),
                ('secretaria_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código da Secretaria')),
            ],
            options={
                'verbose_name_plural': 'Secretarias',
            },
        ),
        migrations.CreateModel(
            name='Responsavel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do(a) Responsável')),
                ('orgao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appPainel.orgao', verbose_name='Nome do Órgão')),
                ('secretaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.secretaria', verbose_name='Nome da Secretaria')),
            ],
            options={
                'verbose_name_plural': 'Responsáveis',
            },
        ),
        migrations.CreateModel(
            name='Programa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programa', models.CharField(max_length=255, verbose_name='Nome do Programa')),
                ('programa_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código do Programa')),
                ('tipo', models.CharField(choices=[('Finalístico', 'Finalístico'), ('Gestão, Manutenção e Serviços ao Estado', 'Gestão, Manutenção e Serviços ao Estado')], max_length=255, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('eixo_estrategico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.eixo', verbose_name='Nome do Eixo')),
            ],
        ),
        migrations.AddField(
            model_name='orgao',
            name='secretaria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.secretaria', verbose_name='Nome da Secretaria'),
        ),
        migrations.CreateModel(
            name='MonitoramentoEtapa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CANCELADA', 'CANCELADA'), ('CONCLUÍDA', 'CONCLUÍDA'), ('EM EXECUÇÃO', 'EM EXECUÇÃO'), ('EM FORMULAÇÃO', 'EM FORMULAÇÃO'), ('EM LICITAÇÃO', 'EM LICITAÇÃO'), ('LICITAÇÃO CONCLUÍDA', 'LICITAÇÃO CONCLUÍDA'), ('PARALISADA', 'PARALISADA'), ('PROJETO TÉCNICO EM ELABORAÇÃO', 'PROJETO TÉCNICO EM ELABORAÇÃO'), ('SUSPENSA', 'SUSPENSA')], max_length=255, verbose_name='Status')),
                ('data_inicio_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Início')),
                ('data_inicio_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Início')),
                ('data_termino_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Término')),
                ('data_termino_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Término')),
                ('execucao_fisica', models.DecimalField(decimal_places=1, default=Decimal('0'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Execução Física')),
                ('observacao', models.TextField(verbose_name='Observação')),
                ('link_fotos', models.URLField(max_length=500, verbose_name='Link de Fotos')),
                ('link_repositorio', models.URLField(max_length=500, verbose_name='Link de Repositório')),
                ('etapa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.etapa', verbose_name='Nome da Etapa')),
            ],
            options={
                'verbose_name_plural': 'Mon. de Etapas',
                'ordering': ('etapa',),
            },
        ),
        migrations.CreateModel(
            name='Monitoramento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('CANCELADA', 'CANCELADA'), ('CONCLUÍDA', 'CONCLUÍDA'), ('EM EXECUÇÃO', 'EM EXECUÇÃO'), ('EM FORMULAÇÃO', 'EM FORMULAÇÃO'), ('EM LICITAÇÃO', 'EM LICITAÇÃO'), ('LICITAÇÃO CONCLUÍDA', 'LICITAÇÃO CONCLUÍDA'), ('PARALISADA', 'PARALISADA'), ('PROJETO TÉCNICO EM ELABORAÇÃO', 'PROJETO TÉCNICO EM ELABORAÇÃO'), ('SUSPENSA', 'SUSPENSA')], max_length=255, verbose_name='Status')),
                ('data_inicio_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Início')),
                ('data_inicio_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Início')),
                ('data_termino_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Término')),
                ('data_termino_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Término')),
                ('execucao_fisica', models.DecimalField(decimal_places=1, default=Decimal('0'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Execução Física')),
                ('observacao', models.TextField(verbose_name='Observação')),
                ('link_fotos', models.URLField(max_length=500, verbose_name='Link de Fotos')),
                ('link_repositorio', models.URLField(max_length=500, verbose_name='Link do Repositório')),
                ('iniciativa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.iniciativa', verbose_name='Nome da Iniciativa')),
            ],
            options={
                'verbose_name_plural': 'Mon. de Iniciativas',
                'ordering': ('iniciativa',),
            },
        ),
        migrations.AddField(
            model_name='iniciativa',
            name='municipio',
            field=models.ManyToManyField(default='Recife', to='appPainel.municipio', verbose_name='Nome do Município'),
        ),
        migrations.AddField(
            model_name='iniciativa',
            name='orgao',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appPainel.orgao', verbose_name='Nome do Órgão'),
        ),
        migrations.AddField(
            model_name='iniciativa',
            name='responsavel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.responsavel', verbose_name='Nome do(a) Responsável'),
        ),
        migrations.AddField(
            model_name='iniciativa',
            name='secretaria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.secretaria', verbose_name='Nome da Secretaria'),
        ),
        migrations.CreateModel(
            name='HistoricalSecretaria',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('secretaria', models.CharField(max_length=255, verbose_name='Nome da Secretaria')),
                ('secretaria_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código da Secretaria')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical secretaria',
                'verbose_name_plural': 'historical Secretarias',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalResponsavel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome do(a) Responsável')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('orgao', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.orgao', verbose_name='Nome do Órgão')),
                ('secretaria', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.secretaria', verbose_name='Nome da Secretaria')),
            ],
            options={
                'verbose_name': 'historical responsavel',
                'verbose_name_plural': 'historical Responsáveis',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPrograma',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('programa', models.CharField(max_length=255, verbose_name='Nome do Programa')),
                ('programa_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código do Programa')),
                ('tipo', models.CharField(choices=[('Finalístico', 'Finalístico'), ('Gestão, Manutenção e Serviços ao Estado', 'Gestão, Manutenção e Serviços ao Estado')], max_length=255, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('eixo_estrategico', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.eixo', verbose_name='Nome do Eixo')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical programa',
                'verbose_name_plural': 'historical programas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOrgao',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('orgao', models.CharField(max_length=255, verbose_name='Nome do Órgão')),
                ('orgao_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código do Órgão')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('secretaria', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.secretaria', verbose_name='Nome da Secretaria')),
            ],
            options={
                'verbose_name': 'historical orgao',
                'verbose_name_plural': 'historical Órgãos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMunicipio',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Município')),
                ('codigo', models.CharField(max_length=7, verbose_name='Código do Município')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical municipio',
                'verbose_name_plural': 'historical Municípios',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMonitoramentoEtapa',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status', models.CharField(choices=[('CANCELADA', 'CANCELADA'), ('CONCLUÍDA', 'CONCLUÍDA'), ('EM EXECUÇÃO', 'EM EXECUÇÃO'), ('EM FORMULAÇÃO', 'EM FORMULAÇÃO'), ('EM LICITAÇÃO', 'EM LICITAÇÃO'), ('LICITAÇÃO CONCLUÍDA', 'LICITAÇÃO CONCLUÍDA'), ('PARALISADA', 'PARALISADA'), ('PROJETO TÉCNICO EM ELABORAÇÃO', 'PROJETO TÉCNICO EM ELABORAÇÃO'), ('SUSPENSA', 'SUSPENSA')], max_length=255, verbose_name='Status')),
                ('data_inicio_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Início')),
                ('data_inicio_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Início')),
                ('data_termino_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Término')),
                ('data_termino_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Término')),
                ('execucao_fisica', models.DecimalField(decimal_places=1, default=Decimal('0'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Execução Física')),
                ('observacao', models.TextField(verbose_name='Observação')),
                ('link_fotos', models.URLField(max_length=500, verbose_name='Link de Fotos')),
                ('link_repositorio', models.URLField(max_length=500, verbose_name='Link de Repositório')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('etapa', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.etapa', verbose_name='Nome da Etapa')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical monitoramento etapa',
                'verbose_name_plural': 'historical Mon. de Etapas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMonitoramento',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('status', models.CharField(choices=[('CANCELADA', 'CANCELADA'), ('CONCLUÍDA', 'CONCLUÍDA'), ('EM EXECUÇÃO', 'EM EXECUÇÃO'), ('EM FORMULAÇÃO', 'EM FORMULAÇÃO'), ('EM LICITAÇÃO', 'EM LICITAÇÃO'), ('LICITAÇÃO CONCLUÍDA', 'LICITAÇÃO CONCLUÍDA'), ('PARALISADA', 'PARALISADA'), ('PROJETO TÉCNICO EM ELABORAÇÃO', 'PROJETO TÉCNICO EM ELABORAÇÃO'), ('SUSPENSA', 'SUSPENSA')], max_length=255, verbose_name='Status')),
                ('data_inicio_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Início')),
                ('data_inicio_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Início')),
                ('data_termino_planejado', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data Planejada - Término')),
                ('data_termino_atualizado', models.DateTimeField(blank=True, null=True, verbose_name='Data Atualizada - Término')),
                ('execucao_fisica', models.DecimalField(decimal_places=1, default=Decimal('0'), max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Execução Física')),
                ('observacao', models.TextField(verbose_name='Observação')),
                ('link_fotos', models.URLField(max_length=500, verbose_name='Link de Fotos')),
                ('link_repositorio', models.URLField(max_length=500, verbose_name='Link do Repositório')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('iniciativa', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.iniciativa', verbose_name='Nome da Iniciativa')),
            ],
            options={
                'verbose_name': 'historical monitoramento',
                'verbose_name_plural': 'historical Mon. de Iniciativas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalIniciativa',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('iniciativa', models.TextField(default='teste', verbose_name='Nome da Iniciativa')),
                ('iniciativa_cd', models.CharField(max_length=4, verbose_name='Código da Iniciativa')),
                ('tipo', models.CharField(choices=[('AÇÃO', 'AÇÃO'), ('AQUISIÇÃO', 'AQUISIÇÃO'), ('OBRA', 'OBRA'), ('PROGRAMA', 'PROGRAMA'), ('PROJETO DE LEI', 'PROJETO DE LEI'), ('PROJETO TÉCNICO', 'PROJETO TÉCNICO'), ('OUTROS', 'OUTROS')], max_length=255, verbose_name='Tipo')),
                ('tema', models.TextField(verbose_name='Tema')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('populacao', models.IntegerField(verbose_name='População')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('acao', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.acao', verbose_name='Nome da Ação')),
                ('gestor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Nome do(a) Gestor(a)')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('orgao', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.orgao', verbose_name='Nome do Órgão')),
                ('responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.responsavel', verbose_name='Nome do(a) Responsável')),
                ('secretaria', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.secretaria', verbose_name='Nome da Secretaria')),
            ],
            options={
                'verbose_name': 'historical iniciativa',
                'verbose_name_plural': 'historical iniciativas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEtapa',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('etapa', models.TextField(default='teste', verbose_name='Nome da Etapa')),
                ('etapa_cd', models.CharField(max_length=4, verbose_name='Código da Etapa')),
                ('tipo', models.CharField(choices=[('AÇÃO', 'AÇÃO'), ('AQUISIÇÃO', 'AQUISIÇÃO'), ('OBRA', 'OBRA'), ('PROGRAMA', 'PROGRAMA'), ('PROJETO DE LEI', 'PROJETO DE LEI'), ('PROJETO TÉCNICO', 'PROJETO TÉCNICO'), ('OUTROS', 'OUTROS')], max_length=255, verbose_name='Tipo')),
                ('tema', models.TextField(verbose_name='Tema')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('populacao', models.IntegerField(verbose_name='População')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('iniciativa', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.iniciativa', verbose_name='Nome da Iniciativa')),
                ('responsavel', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.responsavel', verbose_name='Nome do(a) Responsável')),
            ],
            options={
                'verbose_name': 'historical etapa',
                'verbose_name_plural': 'historical etapas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalEixo',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('eixo_estrategico', models.CharField(max_length=255, verbose_name='Nome do Eixo')),
                ('eixo_estrategico_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código do Eixo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical eixo',
                'verbose_name_plural': 'historical eixos',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAcao',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('acao', models.CharField(max_length=255, verbose_name='Nome da Ação')),
                ('acao_cd', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')], verbose_name='Código da Ação')),
                ('tipo', models.CharField(choices=[('Atividade', 'Atividade'), ('Operação Especial', 'Operação Especial'), ('Projeto', 'Projeto')], max_length=255, verbose_name='Tipo')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('programa', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='appPainel.programa', verbose_name='Nome do Programa')),
            ],
            options={
                'verbose_name': 'historical acao',
                'verbose_name_plural': 'historical Ações',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='etapa',
            name='iniciativa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.iniciativa', verbose_name='Nome da Iniciativa'),
        ),
        migrations.AddField(
            model_name='etapa',
            name='municipio',
            field=models.ManyToManyField(default='Recife', to='appPainel.municipio', verbose_name='Nome do Município'),
        ),
        migrations.AddField(
            model_name='etapa',
            name='responsavel',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.responsavel', verbose_name='Nome do(a) Responsável'),
        ),
        migrations.AddField(
            model_name='acao',
            name='programa',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appPainel.programa', verbose_name='Nome do Programa'),
        ),
    ]
